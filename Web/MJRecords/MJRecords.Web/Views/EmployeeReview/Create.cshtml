@model MJRecords.Web.Models.EmployeeReviewVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>EmployeeReview</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @if (Model.Review.Errors.Count > 0)
            {
                <div class="text-danger">
                    <ul>
                        @foreach (var e in Model.Review.Errors
                       .Where(err => err.ErrorType == MJRecords.Types.ErrorType.Business))
                        {
                            <li>@e.Description</li>
                        }
                    </ul>
                </div>
            }
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Review.EmployeeId" class="control-label"></label>
                <select id="EmployeesList" asp-for="Review.EmployeeId" asp-items="Model.Employees" class="form-select">
                    <option disabled selected>--- SELECT EMPLOYEE ---</option>
                </select>
                @* <input asp-for="Review.EmployeeId" class="form-control" /> *@
                <span asp-validation-for="Review.EmployeeId" class="text-danger"></span>
            </div>
           @*  <div class="form-group">
                <label asp-for="Quarter" class="control-label"></label>
                <select id="QuarterList" asp-for="Quarter" asp-items="Model.Quarter" class="form-select">
                    <option disabled selected>--- SELECT YEAR QUARTER ---</option>
                </select>
                <input asp-for="Review.EmployeeId" class="form-control" />
                <span asp-validation-for="Quarter" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Review.RatingOptionsId" class="control-label"></label>
                <select id="RatingOptionsList" asp-for="Review.RatingOptionsId" asp-items="Model.RatingOptions" class="form-select">
                    <option disabled selected>--- SELECT RATING OPTION ---</option>
                </select>
                @* <input asp-for="Review.RatingOptionsId" class="form-control" /> *@
                <span asp-validation-for="Review.RatingOptionsId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.Comment" class="control-label"></label>
                <input asp-for="Review.Comment" class="form-control" />
                <span asp-validation-for="Review.Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.ReviewDate" class="control-label"></label>
                <input asp-for="Review.ReviewDate" class="form-control" />
                <span asp-validation-for="Review.ReviewDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const employeeList = document.getElementById('EmployeesList');
        if (employeeList && employeeList.options.length <= 1) {
            
            let noEmployeesOption = document.createElement('option');
            noEmployeesOption.text = 'No employees pending review this quarter';
            noEmployeesOption.disabled = true;
            noEmployeesOption.selected = true;

            // Remove the default option
            employeeList.options.remove(0);

            // Add the new option
            employeeList.add(noEmployeesOption);
        }
    });
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
