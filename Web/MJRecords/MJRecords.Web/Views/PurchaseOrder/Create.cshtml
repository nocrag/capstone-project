@model MJRecords.Model.POCreateViewModel


@{
    ViewData["Title"] = "Create New Purchase Order";
}

<a asp-action="Index" class="btn btn-secondary mb-3">&lt; Go Back</a>
<h2>Create New Purchase Order</h2>

<div class="mb-4">
    <h5 class="mb-2 mt-3 text-light">Requesting Employee Info</h5>
    <p><strong>Employee Full Name:</strong> @Model.EmployeeFullName</p>
    <p><strong>Department:</strong> @Model.EmployeeDepartment</p>
    <p><strong>Supervisor:</strong> @Model.EmployeeSupervisor</p>
    <p><strong>Current Date:</strong> @DateTime.Now.ToString("MMMM dd, yyyy")</p>

</div>

<hr class="border border-light opacity-50" />

@Html.ValidationSummary(false, "", new { @class = "text-danger" })
<form asp-action="Create" method="post">
    <h5>New Item Details</h5>

    <div class="row">
        <div class="col-md-4">
            <label asp-for="NewItem.Name" class="form-label">Item Name</label>
            <input asp-for="NewItem.Name" class="form-control" />
            <span asp-validation-for="NewItem.Name" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label asp-for="NewItem.Description" class="form-label">Description</label>
            <input asp-for="NewItem.Description" class="form-control" minlength="5" />
            <span asp-validation-for="NewItem.Description" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label asp-for="NewItem.Quantity" class="form-label">Quantity</label>
            <input asp-for="NewItem.Quantity" class="form-control" min="1" />
            <span asp-validation-for="NewItem.Quantity" class="text-danger"></span>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-4">
            <label asp-for="NewItem.Price" class="form-label">Price</label>
            <input asp-for="NewItem.Price" class="form-control" min="0.01" />
            <span asp-validation-for="NewItem.Price" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label asp-for="NewItem.PurchaseLocation" class="form-label">Purchase Location</label>
            <input asp-for="NewItem.PurchaseLocation" class="form-control" minlength="5" />
            <span asp-validation-for="NewItem.PurchaseLocation" class="text-danger"></span>
        </div>

        <div class="col-md-4">
            <label asp-for="NewItem.Justification" class="form-label">Justification</label>
            <textarea asp-for="NewItem.Justification" class="form-control" minlength="4"></textarea>
            <span asp-validation-for="NewItem.Justification" class="text-danger"></span>
        </div>

        <input type="hidden" asp-for="PurchaseOrderId" />

    </div>

    <div class="mt-3 mb-3 ">
        <button type="submit" class="btn btn-success">Add Item To PO</button>
    </div>
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewBag.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.ExistingItems?.Any() == true)
    {
        <h5>Purchase Order created with PO number: @Model.PurchaseOrderId</h5>
        <h4>Items Added to This Purchase Order</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Justification</th>
                    <th>Purchase Location</th>
                    <th>Status</th>
                    <th>Qty</th>
                    <th>Unit Price</th>
                    <th>Item Subtotal</th>
                    <th>Item Tax Total</th>
                    <th>Item Grand Total</th>
                </tr>
            <tbody>
                @foreach (var item in Model.ExistingItems)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                        <td>@item.Justification</td>
                        <td>@item.PurchaseLocation</td>
                        <td>@item.Status</td>
                        <td>@item.Quantity</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>@((item.Price * item.Quantity).ToString("C"))</td>
                        <td>@((item.Price * item.Quantity * 0.15m).ToString("C"))</td>
                        <td>@((item.Price * item.Quantity * 1.15m).ToString("C"))</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="mt-3 text-end">
            <p><strong>Subtotal:</strong> @Model.Subtotal.ToString("C")</p>
            <p><strong>Tax (15%):</strong> @Model.TaxTotal.ToString("C")</p>
            <p><strong>Grand Total:</strong> @Model.GrandTotal.ToString("C")</p>
        </div>
        <div class="mt-3 d-flex justify-content-end">
            <a asp-action="Index" class="btn btn-success mt-3">Complete Purchase Order</a>

        </div>
    }

</form>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
